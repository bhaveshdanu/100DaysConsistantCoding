import java.util.*;

class Merge_Sort
{
	static void printArray(int arr[])
    {
        StringBuffer sb=new StringBuffer("");
        int n = arr.length;
        for (int i=0; i<n; ++i)
            sb.append(arr[i]+" ");
        System.out.println(sb.toString());
    }
    
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		while(T>0)
		{
			int n = sc.nextInt();
			Merge_Sort ms = new Merge_Sort();
			int arr[] = new int[n];
			for(int i=0;i<n;i++)
				arr[i] = sc.nextInt();       
			Solution g = new Solution();
			g.mergeSort(arr,0,arr.length-1);

            //calling the method printArray
			ms.printArray(arr);
		T--;
		}
	}
}

class Solution
{
    void merge(int arr[], int l, int mid, int r)
    {
         int n=mid-l+1;
         int m=r-mid;
         int[] b1=new int[n];
         int[] b2=new int[m];
         for(int i=0;i<n;i++)
         {
             b1[i]=arr[l+i];
         }
         for(int j=0;j<m;j++)
         {
             b2[j]=arr[mid+1+j];
         }
         int i=0;
         int j=0;
         int k=l;
         while(i<n&&j<m)
         {
             if(b1[i]<b2[j])
             {
                 arr[k]=b1[i];
                 i++;
                 k++;
             }
             else
             {
                 arr[k]=b2[j];
                 j++;
                 k++;
             }
         }
         while(i<n)
         {
            arr[k]=b1[i];
            i++;
            k++;
         }
          while(j<m)
         {
            arr[k]=b2[j];
            j++;
            k++;
         }
    }
    void mergeSort(int arr[], int l, int r)
    {
       if(l<r)
       {
           int mid=(l+r)/2;
           mergeSort(arr,l,mid);
           mergeSort(arr,mid+1,r);
           merge(arr,l,mid,r);
           
       }
    }
}
