import java.io.*;
import java.util.*;
import java.util.Map.Entry;

class GFG {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t-- > 0) {
            int n = sc.nextInt();
            int[] a = new int[n];
            for (int i = 0; i < n; i++) a[i] = sc.nextInt();
            Solution g = new Solution();
            ArrayList<Integer> ans = g.duplicates(a, n);
            for (Integer val : ans) System.out.print(val + " ");
            System.out.println();
        }
    }
}
class Solution {
    public static ArrayList<Integer> duplicates(int arr[], int n) {
       HashMap<Integer,Integer> hm=new HashMap<>();
       ArrayList<Integer> list=new ArrayList<>();
       for(int x:arr)
       {
           if(hm.containsKey(x))
           {
               hm.put(x,hm.get(x)+1);
           }
           else
           {
               hm.put(x,1);
           }
       }
       Iterator it=hm.entrySet().iterator();
       
       while(it.hasNext())
       {
           Map.Entry ele=(Map.Entry) it.next();
           if((int)ele.getValue()>1)
           {
               list.add((int) ele.getKey());
           }
       }
      
       if(list.isEmpty())
       {
           list.add(-1);
           return list;
       }
       Collections.sort(list);
       return list;
    }
}
